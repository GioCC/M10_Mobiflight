<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="ArdSimM10" />
		<Option pch_mode="2" />
		<Option compiler="avr-gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/ArdSimUSB" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-g" />
					<Add option="-save-temps" />
					<Add option="-fverbose-asm" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
			</Target>
			<Target title="Arduino Uno">
				<Option output="build/ArdSimM10_${BOARD_ID}.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Uno" />
					<Variable name="BOARD_ID" value="uno" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="115200" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Arduino Nano (328)">
				<Option output="build/ArdSimM10_${BOARD_ID}.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-O2" />
					<Add option="-Os" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/eightanaloginputs" />
					<Add directory="include" />
					<Add directory="lib/DbgDirectIO" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-s" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Nano (328)" />
					<Variable name="BOARD_ID" value="nano328" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Arduino Pro Mini (328)">
				<Option output="build/ArdSimM10_${BOARD_ID}.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Pro Mini (328)" />
					<Variable name="BOARD_ID" value="promini328" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Arduino Mega 2560">
				<Option output="build/ArdSimM10_${BOARD_ID}.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega2560__" />
					<Add option="-O2" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/mega" />
					<Add directory="include" />
					<Add directory="lib/DbgDirectIO" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-s" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Mega 2560\ADK" />
					<Variable name="BOARD_ID" value="mega2560" />
					<Variable name="MCU" value="atmega2560" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Pro Mini - Controller">
				<Option output="build/ArdSimM10_${BOARD_ID}_Ctr.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DCONTROLLER" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Pro Mini (328)" />
					<Variable name="BOARD_ID" value="promini328" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Pro Mini - M10Standalone">
				<Option output="build/ArdSimM10_${BOARD_ID}_Sta.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DM10_STANDALONE" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Pro Mini (328)" />
					<Variable name="BOARD_ID" value="promini328" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Pro Mini - M10Slave">
				<Option output="build/ArdSimM10_${BOARD_ID}_Sla.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DM10_SLAVE" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Pro Mini (328)" />
					<Variable name="BOARD_ID" value="promini328" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="57600" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Uno - Controller">
				<Option output="build/ArdSimM10_${BOARD_ID}_Ctr.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DCONTROLLER" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Uno" />
					<Variable name="BOARD_ID" value="uno" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="115200" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Uno - M10Standalone">
				<Option output="build/ArdSimM10_${BOARD_ID}_Sta.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DM10_STANDALONE" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Uno" />
					<Variable name="BOARD_ID" value="uno" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="115200" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
			<Target title="Uno - M10Slave">
				<Option output="build/ArdSimM10_${BOARD_ID}_Sla.elf" prefix_auto="1" extension_auto="0" />
				<Option object_output="build" />
				<Option type="1" />
				<Option compiler="avr-gcc" />
				<Compiler>
					<Add option="-Os" />
					<Add option="-O2" />
					<Add option="-x c++" />
					<Add option="-mmcu=$(MCU)" />
					<Add option="-DF_CPU=16000000L" />
					<Add option="-D__AVR_ATmega328P__" />
					<Add option="-DM10_SLAVE" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/cores/arduino" />
					<Add directory="$(ARDUINO_DIR)/libraries" />
					<Add directory="$(ARDUINO_DIR)/hardware/arduino/variants/standard" />
					<Add directory="include" />
					<Add directory="src" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-mmcu=$(MCU)" />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option='&quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add option="-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref" />
					<Add option="-lm -lc -lm" />
				</Linker>
				<ExtraCommands>
					<Add before='$(TARGET_COMPILER_DIR)ArduinoUploader &quot;$(PROJECT_DIR).&quot; $(BOARD_ID) - $(MCU_CLOCK) 0 &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/lib_${BOARD_ID}_${MCU_CLOCK}.a&quot; &quot;$(PROJECT_DIR)${TARGET_OUTPUT_DIR}/core_${BOARD_ID}_${MCU_CLOCK}.a&quot;' />
					<Add after='avr-objcopy -O ihex -R .eeprom -R .eesafe &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).hex&quot;' />
					<Add after='avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex &quot;$(TARGET_OUTPUT_FILE)&quot; &quot;$(TARGET_OUTPUT_FILE).eep.hex&quot;' />
					<Add after='avr-size --mcu=$(MCU) --format=avr &quot;$(TARGET_OUTPUT_FILE)&quot;' />
				</ExtraCommands>
				<Environment>
					<Variable name="BOARD" value="Arduino Uno" />
					<Variable name="BOARD_ID" value="uno" />
					<Variable name="MCU" value="atmega328p" />
					<Variable name="MCU_CLOCK" value="16" />
					<Variable name="UPLOAD_BAUDRATE" value="115200" />
					<Variable name="UPLOAD_PORT" value="" />
				</Environment>
			</Target>
		</Build>
		<Compiler>
			<Add option="-O2" />
			<Add option="-Wall" />
			<Add option="-Wl,--gc-sections" />
			<Add directory="stdlib/Wire" />
			<Add directory="stdlib/Wire/utility" />
			<Add directory="stdlib/SPI" />
			<Add directory="lib" />
			<Add directory="lib/Bank" />
			<Add directory="lib/FastArduino" />
			<Add directory="lib/MCP23x17" />
			<Add directory="lib/EncoderM10" />
			<Add directory="lib/LedControlMod" />
			<Add directory="lib/DataPool" />
			<Add directory="lib/ButtonSet" />
			<Add directory="lib/CommandSet" />
			<Add directory="lib/EncoderSet" />
			<Add directory="lib/LEDface" />
			<Add directory="lib/LCDface" />
			<Add directory="src" />
			<Add directory="src/ArdSim" />
		</Compiler>
		<Linker>
			<Add option="-Wl,--gc-sections" />
		</Linker>
		<Unit filename="ArdSimM10.ino">
			<Option compile="1" />
			<Option link="1" />
		</Unit>
		<Unit filename="lib/Bank/bank.h" />
		<Unit filename="lib/ButtonSet/Button.cpp" />
		<Unit filename="lib/ButtonSet/Button.h" />
		<Unit filename="lib/ButtonSet/ButtonAdv.cpp" />
		<Unit filename="lib/ButtonSet/ButtonAdv.h" />
		<Unit filename="lib/ButtonSet/ButtonAna.cpp" />
		<Unit filename="lib/ButtonSet/ButtonAna.h" />
		<Unit filename="lib/ButtonSet/ButtonBas.cpp" />
		<Unit filename="lib/ButtonSet/ButtonBas.h" />
		<Unit filename="lib/ButtonSet/ButtonEnc.cpp" />
		<Unit filename="lib/ButtonSet/ButtonEnc.h" />
		<Unit filename="lib/ButtonSet/ButtonGrp.cpp" />
		<Unit filename="lib/ButtonSet/ButtonGrp.h" />
		<Unit filename="lib/ButtonSet/ButtonManager.cpp" />
		<Unit filename="lib/ButtonSet/ButtonManager.h" />
		<Unit filename="lib/CommandSet/CmdEvent.cpp" />
		<Unit filename="lib/CommandSet/CmdEvent.h" />
		<Unit filename="lib/CommandSet/CmdEventManager.cpp" />
		<Unit filename="lib/CommandSet/CmdEventManager.h" />
		<Unit filename="lib/EncoderM10/EncoderM10.cpp" />
		<Unit filename="lib/EncoderM10/EncoderM10.h" />
		<Unit filename="lib/EncoderSet/EncManager.cpp" />
		<Unit filename="lib/EncoderSet/EncManager.h" />
		<Unit filename="lib/EncoderSet/ManagedEnc.cpp" />
		<Unit filename="lib/EncoderSet/ManagedEnc.h" />
		<Unit filename="lib/FastArduino/FastArduino.cpp" />
		<Unit filename="lib/FastArduino/FastArduino.h" />
		<Unit filename="lib/LCDface/LCDface.cpp" />
		<Unit filename="lib/LCDface/LCDface.h" />
		<Unit filename="lib/LEDface/LEDface.cpp" />
		<Unit filename="lib/LEDface/LEDface.h" />
		<Unit filename="lib/LedControlMod/LedControlMod.cpp">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="lib/LedControlMod/LedControlMod.h">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="lib/LedControlMod/examples/LCDemo7Segment/LCDemo7Segment.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/LedControlMod/examples/LCDemoCascadedDevices/LCDemoCascadedDevices.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/LedControlMod/examples/LCDemoMatrix/LCDemoMatrix.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/MCP23S17/Examples/mcp23s17_bit_example/mcp23s17_bit_example.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/MCP23S17/Examples/mcp23s17_byte_bit_example/mcp23s17_byte_bit_example-v2.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/MCP23S17/Examples/mcp23s17_word_example/mcp23s17_word_example.ino">
			<Option target="Debug" />
			<Option target="Arduino Mega 2560" />
		</Unit>
		<Unit filename="lib/MCP23S17/MCP23S17.cpp">
			<Option compile="0" />
			<Option link="0" />
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="lib/MCP23S17/MCP23S17.h">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="lib/MCP23x17/MCP23017.cpp" />
		<Unit filename="lib/MCP23x17/MCP23017.h" />
		<Unit filename="lib/MCP23x17/MCP23S17.cpp" />
		<Unit filename="lib/MCP23x17/MCP23S17.h" />
		<Unit filename="lib/MCP23x17/MCP23x17.cpp" />
		<Unit filename="lib/MCP23x17/MCP23x17.h" />
		<Unit filename="src/Frequency.cpp" />
		<Unit filename="src/Frequency.h" />
		<Unit filename="src/InOutLinkUSB.cpp" />
		<Unit filename="src/InOutLinkUSB.h" />
		<Unit filename="src/M10board.cpp">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="src/M10board.h">
			<Option weight="0" />
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Standalone" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Standalone" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="src/RawData.h" />
		<Unit filename="src/WireSlave.cpp">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="src/WireSlave.h">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="src/bitmasks.h" />
		<Unit filename="src/board_code.h" />
		<Unit filename="src/boardcfg/_superati/config_board.h" />
		<Unit filename="src/boardcfg/config_board ReadMe.txt" />
		<Unit filename="src/boardcfg/config_board-01_Radio.h" />
		<Unit filename="src/boardcfg/config_board-02_ADF_DME.h" />
		<Unit filename="src/boardcfg/config_board-03_XPDR_OBS_CLK.h" />
		<Unit filename="src/boardcfg/config_board-04_AP.h" />
		<Unit filename="src/boardcfg/config_board-05_Radio_LCD.h" />
		<Unit filename="src/boardcfg/config_board-06_Multi_LCD.h" />
		<Unit filename="src/boardcfg/config_board-07_AP_LCD.h" />
		<Unit filename="src/boardcfg/config_board-08_Audio.h" />
		<Unit filename="src/boardcfg/config_board-09_EFIS.h" />
		<Unit filename="src/config_board.h">
			<Option weight="0" />
		</Unit>
		<Unit filename="src/config_build.h" />
		<Unit filename="src/conversions.cpp" />
		<Unit filename="src/conversions.h" />
		<Unit filename="src/varStore.cpp" />
		<Unit filename="src/varStore.h" />
		<Unit filename="stdlib/SPI/SPI.cpp" />
		<Unit filename="stdlib/SPI/SPI.h" />
		<Unit filename="stdlib/Wire/Wire.cpp">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - Controller" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - Controller" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="stdlib/Wire/Wire.h">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - Controller" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - Controller" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="stdlib/Wire/utility/twi.cpp">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - Controller" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - Controller" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Unit filename="stdlib/Wire/utility/twi.h">
			<Option target="Debug" />
			<Option target="Arduino Uno" />
			<Option target="Arduino Nano (328)" />
			<Option target="Arduino Pro Mini (328)" />
			<Option target="Arduino Mega 2560" />
			<Option target="Pro Mini - Controller" />
			<Option target="Pro Mini - M10Slave" />
			<Option target="Uno - Controller" />
			<Option target="Uno - M10Slave" />
		</Unit>
		<Extensions />
	</Project>
</CodeBlocks_project_file>
